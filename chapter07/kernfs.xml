<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-tools-kernfs">
  <?dbhtml filename="kernfs.html"?>

  <title>Forberede det virtuelle kjernefilsystemer</title>

  <indexterm zone="ch-tools-kernfs">
    <primary sortas="e-/dev/">/dev/*</primary>
  </indexterm>

    <para>Applikasjoner som kjører i brukerområdet bruker forskjellige
    filsystemer opprettet av kjernen for å kommunisere
    med selve kjernen. Disse filsystemene er virtuelle: ingen
    diskplass brukes til dem. Innholdet i disse filsystemene ligger i
    minnet. Disse filsystemene må monteres i $LFS katalogtreet
    slik at applikasjonene kan finne dem i chroot miljøet.</para>

    <para>Begynn med å lage mappene som disse virtuelle filsystemene vil være
    montert på:</para>

<screen><userinput>mkdir -pv $LFS/{dev,proc,sys,run}</userinput></screen>

  <sect2 id="ch-tools-bindmount">
    <title>Montering og fylling av /dev</title>

      <para>Under en normal oppstart av et LFS systemet vil kjernen automatisk
      montere <systemitem class="filesystem">devtmpfs</systemitem>
      filsystemet på
      <filename class="directory">/dev</filename> mappen; kjernen
      oppretter enhetsnoder på det virtuelle filsystemet under oppstartsprosessen,
      eller når en enhet først oppdages eller åpnes. Udev nissen kan
      endre eierskapet eller tillatelsene til enhetsnodene opprettet av
      kjernen, og lage nye enhetsnoder eller symbolkoblinger for å lette arbeidet til
      distro vedlikeholdere og systemadministratorer. (Se
      <xref linkend='ch-config-udev-device-node-creation'/> for detaljer.)
      Hvis vertskjernen støtter &devtmpfs;, kan vi enkelt montere en
      &devtmpfs; på <filename class='directory'>$LFS/dev</filename> og stole på
      at kjernen fyller den.</para>

      <para>Men noen vertskjerner mangler &devtmpfs; støtte; disse
      vertsdistroene bruker forskjellige metoder for å lage innholdet i
      <filename class="directory">/dev</filename>.
      Så den eneste verts-agnostiske måten å fylle
      <filename class="directory">$LFS/dev</filename> mappen er
      ved å bind-montere vertssystemets
      <filename class="directory">/dev</filename> mappe. En bind-montering er
      en spesiell type montering som lager et mappeundertre eller en fil
      synlig på et annet sted. Bruk følgende
      kommando for å gjøre dette.</para>

<screen><userinput>mount -v --bind /dev $LFS/dev</userinput></screen>

  </sect2>

  <sect2 id="ch-tools-kernfsmount">
    <title>Montering av det virtuelle kjernefilsystemer</title>

      <para>Monter nå de gjenværende virtuelle kjernefilsystemene:</para>

<screen><userinput>mount -v --bind /dev/pts $LFS/dev/pts
mount -vt proc proc $LFS/proc
mount -vt sysfs sysfs $LFS/sys
mount -vt tmpfs tmpfs $LFS/run</userinput></screen>
<!--
    <variablelist>
      <title>Betydningen av monteringsalternativene for devpts:</title>

      <varlistentry>
        <term><parameter>gid=5</parameter></term>
        <listitem>
          <para>Dette sikrer at alle devpts opprettede enhetsnoder eies av
          gruppe ID 5. Dette er IDen vi skal bruke senere for <systemitem
          class="groupname">tty</systemitem> gruppen.  Vi bruker gruppe-ID i stedet
          for et navn, siden vertssystemet kan bruke en annen ID for sitt
          <systemitem class="groupname">tty</systemitem> gruppen.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>mode=0620</parameter></term>
        <listitem>
          <para>Dette sikrer at alle devpts opprettede enhetsnoder har modus 0620
          (bruker lesbar og skrivbar, gruppeskrivbar). Sammen med
          alternativet ovenfor, sikrer dette at devpts vil opprette enhetsnoder som
          oppfylle kravene til grantpt(), som betyr Glibc
          <command>pt_chown</command> hjelper binær (som ikke er installert som
          standard) ikke er nødvendig.</para>
        </listitem>
      </varlistentry>

    </variablelist>
-->
      <para>I noen vertssystemer, <filename>/dev/shm</filename> er en
      symbolsk lenke til <filename class="directory">/run/shm</filename>.
      /run tmpfs ble montert ovenfor, så i dette tilfellet er det bare en
      mappe som må opprettes.</para>

      <para>I andre vertssystemer <filename>/dev/shm</filename> er et monteringspunkt
      for en tmpfs. I så fall vil monteringen av /dev ovenfor bare opprette
      /dev/shm i chroot miljøet som en mappe. I denne situasjonen
      monterer vi eksplisitt en tmpfs:</para>

<screen><userinput>if [ -h $LFS/dev/shm ]; then
  (cd $LFS/dev; mkdir $(readlink shm))
else
  mount -vt tmpfs -o nosuid,nodev tmpfs $LFS/dev/shm
fi</userinput></screen>

  </sect2>

</sect1>
