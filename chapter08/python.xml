<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-Python" role="wrap">
  <?dbhtml filename="Python.html"?>

  <sect1info condition="script">
    <productname>Python</productname>
    <productnumber>&python-version;</productnumber>
    <address>&python-url;</address>
  </sect1info>

  <title>Python-&python-version;</title>

  <indexterm zone="ch-system-Python">
    <primary sortas="a-Python">Python</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>Python 3 pakken inneholder Python utviklingsmiljøet. Den
    er nyttig for objektorientert programmering, skriving av skript, prototyping
    store programmer, eller utvikle hele applikasjoner.</para>

    <segmentedlist>
      <segtitle>&buildtime;</segtitle>
      <segtitle>&diskspace;</segtitle>

      <seglistitem>
        <seg>&python-fin-sbu;</seg>
        <seg>&python-fin-du;</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installasjon av Python 3</title>

    <para>Forbered Python for kompilering:</para>

<screen><userinput remap="configure">./configure --prefix=/usr        \
            --enable-shared      \
            --with-system-expat  \
            --with-system-ffi    \
            --enable-optimizations</userinput></screen>

    <variablelist>
      <title>Betydningen av konfigureringsalternativene:</title>

    <varlistentry>
      <term><parameter>--with-system-expat</parameter></term>
      <listitem>
        <para>Denne bryteren muliggjør kobling mot systemversjonen av
        <application>Expat</application>.</para>
       </listitem>
     </varlistentry>

    <varlistentry>
      <term><parameter>--with-system-ffi</parameter></term>
      <listitem>
        <para>Denne bryteren muliggjør kobling mot systemversjonen av
        <application>libffi</application>.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter>--enable-optimizations</parameter></term>
      <listitem>
        <para>Denne bryteren muliggjør stabile, men dyre, optimaliseringer.</para>
      </listitem>
    </varlistentry>

    </variablelist>

    <para>Kompiler pakken:</para>

<screen><userinput remap="make">make</userinput></screen>

    <para>Det anbefales ikke å kjøre testene på dette tidspunktet.
    Tester er kjent for å henge på ubestemt tid i det delvise LFS miljøet.
    Om ønskelig kan testene kjøres på nytt på slutten av dette kapittelet eller
    når Python 3 er reinstallert i BLFS. For å kjøre testene uansett,
    utsted <command>make test</command>.</para>

    <para>Installer pakken:</para>

<screen><userinput remap="install">make install</userinput></screen>

    <para>Flere steder bruker vi kommandoen <command>pip3</command> for å
    installere Python 3 programmer og moduler for alle brukere som
    <systemitem class='username'>root</systemitem>. Dette er i konflikt
    med Python-utviklernes anbefaling om å installere pakker i en
    virtuelt miljø eller hjemmemappen til en vanlig bruker (ved å kjøre
    <command>pip3</command> som denne brukeren). For dette formål blir en advarsel med flere linjer
    skrevet når du bruker <command>pip3</command> som
    <systemitem class='username'>root</systemitem> brukeren.  Hovedgrunnen
    for denne anbefalingen er å unngå konflikt med systemets
    pakkebehandling (<command>dpkg</command> for eksempel), men LFS har ikke
    en systemomfattende pakkebehandling, så dette er ikke et problem. Og,
    <command>pip3</command> vil prøve å se etter en ny versjon av
    seg selv når den kjøres. Siden domenenavnsløsning ikke er konfigurert
    i LFS chroot miljøet ennå, vil den ikke se etter en ny versjon
    og gi en advarsel. Når vi starter opp LFS systemet og setter opp
    nettverkstilkobling, vil den deretter produsere en advarsel som ber brukeren om å oppdatere den
    fra et forhåndsbygd hjul på PyPI hvis en ny versjon er tilgjengelig. Men LFS
    betrakter <command>pip3</command> som en del av Python 3, så den burde ikke
    oppdateres separat, og en oppdatering fra et forhåndsbygd hjul vil avvike
    fra vårt formål å bygge et Linux system fra kildekode. Så
    advarsel for en ny <command>pip3</command> versjon bør ignoreres om
    vi vil. Hvis ønskelig, undertrykk disse advarslene ved å kjøre følgende
    kommandoer:</para>

 <screen><userinput remap="install">cat &gt; /etc/pip.conf &lt;&lt; EOF
[global]
root-user-action = ignore
disable-pip-version-check = true
EOF
</userinput></screen>
<!--
<screen><userinput remap="install">sed -e '/def warn_if_run_as_root/a\    return' \
    -i /usr/lib/python3.10/site-packages/pip/_internal/cli/req_command.py
</userinput></screen>
-->
    <important>
      <para>
        I LFS og BLFS bygger og installerer vi normalt Python-moduler med
        <command>pip3</command> Vennligst pass på at
        <command>pip3 install</command> kommandoer i begge bøkene skal
        kjøres som &root; brukeren med mindre det er for et virtuelt Python-miljø. Å kjøre
        en <command>pip3 install</command> som en ikke-&root; bruker kan synes å
        fungerer fint, men det vil føre til at den installerte modulen blir utilgjengelig av
        andre brukere.
      </para>

      <para>
        <command>pip3 install</command> vil ikke installere en allerede
        installert modul som standard. For å bruke <command>pip3 install</command>
        kommandoen for å oppgradere en modul (for
        eksempel fra meson-0.61.3 til meson-0.62.0), legg til <parameter>--upgrade</parameter> til 
		kommandolinjen. Hvis det virkelig er nødvendig å nedgradere en modul eller 
		installer samme versjon på nytt av en eller annen grunn, sett inn
        <parameter>--force-reinstall --no-deps</parameter> i
        kommandolinjen.
      </para>
    </important>

    <para>Hvis ønskelig, installer den forhåndsformaterte dokumentasjonen:</para>

<screen><userinput remap="install">install -v -dm755 /usr/share/doc/python-&python-version;/html

tar --strip-components=1  \
    --no-same-owner       \
    --no-same-permissions \
    -C /usr/share/doc/python-&python-version;/html \
    -xvf ../python-&python-version;-docs-html.tar.bz2</userinput></screen>

    <variablelist>
      <title>Betydningen av dokumentasjonsinstallasjons kommandoene:</title>

    <varlistentry>
      <term><option>--no-same-owner</option> og <option>--no-same-permissions</option></term>
      <listitem>
        <para>Sørg for at de installerte filene har riktig eierskap og
        tillatelser. Uten disse alternativene, å bruke <application>tar</application>
        vil installere pakkefilene med oppstrøms skaperens verdier.
        </para>
      </listitem>
    </varlistentry>

    </variablelist>

  </sect2>

  <sect2 id="contents-python" role="content">
    <title>Innhold i Python 3</title>

    <segmentedlist>
      <segtitle>Installerte programmer</segtitle>
      <segtitle>Installert bibliotek</segtitle>
      <segtitle>Installerte mapper</segtitle>

      <seglistitem>
        <seg>
          2to3, idle3, pip3, pydoc3, python3, og python3-config
        </seg>
        <seg>
          libpython&python-minor;.so og libpython3.so
        </seg>
        <seg>
          /usr/include/python&python-minor;,
          /usr/lib/python3, og
          /usr/share/doc/python-&python-version;
        </seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Korte beskrivelser</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="python-2to3">
        <term><command>2to3</command></term>
        <listitem>
          <para>
            er et <application>Python</application> program som leser
            <application>Python 2.x</application> kildekoden og bruker en
            serie reparasjoner for å forvandle den til
            gyldig <application>Python 3.x</application> kode
          </para>
          <indexterm zone="ch-system-Python">
            <primary sortas="b-2to3">2to3</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="idle3">
        <term><command>idle3</command></term>
        <listitem>
          <para>
            er et innpakningsskript som åpner en <application>Python</application>
            bevisst GUI tekstprogram. For at dette skriptet skal kjøre, må du ha installert
            <application>Tk</application> før Python slik at Tkinter
            Python modulen blir bygget
          </para>
          <indexterm zone="ch-system-Python">
            <primary sortas="b-idle3">idle3</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pip3">
        <term><command>pip3</command></term>
        <listitem>
          <para>
            Pakkeinstallasjonsprogrammet for Python. Du kan bruke pip til å installere
            pakker fra Python Pakke Indeks og andre indekser
          </para>
          <indexterm zone="ch-system-Python">
            <primary sortas="b-pip3">pip3</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="pydoc3">
        <term><command>pydoc3</command></term>
        <listitem>
          <para>
            er <application>Python</application> dokumentasjonsverktøy
          </para>
          <indexterm zone="ch-system-Python">
            <primary sortas="b-pydoc3">pydoc3</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="python3">
        <term><command>python3</command></term>
        <listitem>
          <para>
            er et tolket, interaktiv, objektorientert programmerings
            språk
          </para>
          <indexterm zone="ch-system-Python">
            <primary sortas="b-python3">python3</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>

