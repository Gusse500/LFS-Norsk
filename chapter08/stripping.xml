<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-system-stripping">
  <?dbhtml filename="stripping.html"?>

  <title>Stripping</title>

  <para>Denne delen er valgfri. Hvis den tiltenkte brukeren ikke er en
  programmerer og ikke planlegger å gjøre
  noen feilsøking på systemprogramvaren, kan systemstørrelsen reduseres
  med omtrent 2 GB ved å fjerne feilsøkingssymbolene, og noen unødvendige
  symboltabelloppføringer fra binærfiler og biblioteker. Dette medfører ingen ulemper for
  en typisk Linuxbruker.</para>

  <para>De fleste som bruker kommandoene nevnt nedenfor,
  opplever ikke noen vanskeligheter. Det er imidlertid lett å gjøre en skrivefeil og
  gjør det nye systemet ubrukelig, så før du kjører
  <command>strip</command> kommandoer, er det en god ide å lage en
  sikkerhetskopiering av LFS systemet i gjeldende tilstand.</para>

  <para>En <command>strip</command> kommando med
  <parameter>--strip-unneeded</parameter> alternativet fjerner alle feilsøkingssymboler
  fra en binær eller et bibliotek. Og det fjerner alle symboltabelloppføringer
  som ikke er nødvendig for linkeren (for statiske biblioteker) eller dynamisk linker (for
  dynamisk koblede binære filer og delte biblioteker).</para>

  <!-- TODO: Zstd is better than Zlib for both speed and size.
             Unfortunately Valgrind does not support Zstd-compressed debug
             info yet: https://bugs.kde.org/show_bug.cgi?id=469782 -->
  <para>Feilsøkingssymbolene fra utvalgte biblioteker komprimeres med
  <application>Zlib</application> og lagres i separate filer. Denne
  feilsøkingsinformasjon er nødvendig for å kjøre regresjonstester med <ulink
  url='&blfs-book;/general/valgrind.html'>valgrind</ulink> eller <ulink
  url='&blfs-book;/general/gdb.html'>gdb</ulink> senere i BLFS.
  </para>

  <para>Merk at <command>strip</command> vil overskrive binær eller bibliotek
  filen den behandler. Dette kan krasje prosessene som bruker kode eller data fra
  filen. Hvis prosessen som kjører <command>strip</command> selv er
  påvirket, kan binærfilen eller biblioteket som blir strippet bli ødelagt og kan
  gjøre systemet helt ubrukelig. For å unngå det, kopierer vi noen biblioteker
  og binærfiler til <filename class="directory">/tmp</filename>, stripper dem
  der, og installer dem tilbake med <command>install</command> kommandoen.
  (Den relaterte oppføringen i <xref linkend="pkgmgmt-upgrade-issues"/> gir
  begrunnelsen for å bruke <command>install</command> kommandoen her.)</para>

  <note><para>ELF lasterens navn er ld-linux-x86-64.so.2 på 64-bits systemer
  og ld-linux.so.2 på 32-bits systemer. Konstruksjonen nedenfor velger
  riktig navn for gjeldende arkitektur, unntatt noe som slutter
  med <quote>g</quote>, i tilfelle kommandoene nedenfor allerede har vært
  kjørt.</para></note>

  <important>
    <para>
      Hvis det er en en pakke som versjonen er forskjellig fra versjonen
      spesifisert av boken (enten etter et sikkerhetsråd eller
      som tilfredsstiller personlige preferanser), kan det være nødvendig å oppdatere
      bibliotekets filnavn i <envar>save_usrlib</envar> eller
      <envar>online_usrlib</envar>.
      <emphasis role='bold'>Unnlatelse av å gjøre det kan gjøre systemet
      helt ubrukelig.</emphasis>
    </para>
  </important>

<!-- also of interest are libgfortan, libgo, libgomp, and libobjc from GCC -->

<!--<screen><userinput>save_lib="ld-2.25.so libc-2.25.so libpthread-2.25.so libthread_db-1.0.so"-->
<screen><userinput>save_usrlib="$(cd /usr/lib; ls ld-linux*[^g])
             libc.so.6
             libthread_db.so.1
             libquadmath.so.&libquadmath-version;
             libstdc++.so.&libstdcpp-version;
             libitm.so.&libitm-version;
             libatomic.so.&libatomic-version;"

cd /usr/lib

for LIB in $save_usrlib; do
    objcopy --only-keep-debug $LIB $LIB.dbg
    cp $LIB /tmp/$LIB
    strip --strip-unneeded /tmp/$LIB
    objcopy --add-gnu-debuglink=$LIB.dbg /tmp/$LIB
    install -vm755 /tmp/$LIB /usr/lib
    rm /tmp/$LIB
done

online_usrbin="bash find strip"
online_usrlib="libbfd-&binutils-version;.so
               libsframe.so.&libsframe-version;
               libhistory.so.&readline-soversion;
               libncursesw.so.&ncurses-version;
               libm.so.6
               libreadline.so.&readline-soversion;
               libz.so.&zlib-version;
               libzstd.so.&zstd-version;
               $(cd /usr/lib; find libnss*.so* -type f)"

for BIN in $online_usrbin; do
    cp /usr/bin/$BIN /tmp/$BIN
    strip --strip-unneeded /tmp/$BIN
    install -vm755 /tmp/$BIN /usr/bin
    rm /tmp/$BIN
done

for LIB in $online_usrlib; do
    cp /usr/lib/$LIB /tmp/$LIB
    strip --strip-unneeded /tmp/$LIB
    install -vm755 /tmp/$LIB /usr/lib
    rm /tmp/$LIB
done

for i in $(find /usr/lib -type f -name \*.so* ! -name \*dbg) \
         $(find /usr/lib -type f -name \*.a)                 \
         $(find /usr/{bin,sbin,libexec} -type f); do
    case "$online_usrbin $online_usrlib $save_usrlib" in
        *$(basename $i)* )
            ;;
        * ) strip --strip-unneeded $i
            ;;
    esac
done

unset BIN LIB save_usrlib online_usrbin online_usrlib
</userinput></screen>

  <para>Et stort antall filer vil bli rapportert som at
  filformatet ikke er gjenkjent. Disse advarslene kan trygt ignoreres. De
  indikerer at disse filene er skript i stedet for binære filer.</para>

</sect1>
