<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-config-systemd-custom" revision="systemd">
  <?dbhtml filename="systemd-custom.html"?>

  <title>Systemd bruk og konfigurasjon</title>

  <indexterm zone="ch-config-systemd-custom">
    <primary sortas="e-Systemd">Systemd Customization</primary>
  </indexterm>

  <sect2>
    <title>Grunnleggende konfigurasjon</title>

    <para><filename>/etc/systemd/system.conf</filename> filen inneholder et sett
    av alternativer for å kontrollere grunnleggende systemoperasjoner. Standardfilen har alle
    oppføringer kommentert med standardinnstillingene angitt. Denne filen er
    hvor loggnivået kan endres, samt noen grunnleggende logginnstillinger.
    See the <ulink role='man'
    url='&man;systemd-system.conf.5'>systemd-system.conf(5)</ulink> manualside
    for detaljer om hvert konfigurasjonsalternativ.</para>

  </sect2>

  <sect2>
    <title>Deaktiverer skjermtømming ved oppstart</title>

    <para>Normal oppførsel for systemd er å tømme skjermen på
    slutten av oppstartssekvensen. Hvis ønskelig, kan denne oppførselen
    endres ved å kjøre følgende kommando:</para>

<screen role="nodump"><userinput>mkdir -pv /etc/systemd/system/getty@tty1.service.d

cat &gt; /etc/systemd/system/getty@tty1.service.d/noclear.conf &lt;&lt; EOF
<literal>[Service]
TTYVTDisallocate=no</literal>
EOF</userinput></screen>

    <para>Oppstartsmeldingene kan alltid gjennomgås ved å bruke
    <userinput>journalctl -b</userinput> kommandoen som
    <systemitem class="username">root</systemitem> bruker.</para>

  </sect2>

  <sect2 id='systemd-no-tmpfs'>
    <title>Deaktivere tmpfs for /tmp</title>

    <para>Som standard, <filename class="directory">/tmp</filename> blir opprettet som
    en tmpfs. Hvis dette ikke er ønsket, kan det overstyres ved å utføre
    følgende kommando:</para>

<screen role="nodump"><userinput>ln -sfv /dev/null /etc/systemd/system/tmp.mount</userinput></screen>

    <para>Alternativt, hvis en egen partisjon for
    <filename class="directory">/tmp</filename> er ønsket, spesifiser
    partisjonen i en <filename>/etc/fstab</filename> oppføring.</para>

    <warning>
      <para>
        Ikke lag den symbolske lenken ovenfor hvis en separat partisjon brukes
        til <filename class="directory">/tmp</filename>.  Dette vil forhindre
        rotfilsystemet (/) fra å bli remontert r/w og gjør systemet
        ubrukelig ved oppstart.
      </para>
    </warning>

  </sect2>

  <sect2>
    <title>Konfigurere automatisk filoppretting og sletting</title>

    <para>Det er flere tjenester som oppretter eller sletter filer eller
    mapper:</para>

    <itemizedlist>
      <listitem><para>systemd-tmpfiles-clean.service</para></listitem>
      <listitem><para>systemd-tmpfiles-setup-dev.service</para></listitem>
      <listitem><para>systemd-tmpfiles-setup.service</para></listitem>
    </itemizedlist>

    <para>Systemplasseringen for konfigurasjonsfilene er
    <filename>/usr/lib/tmpfiles.d/*.conf</filename>. Den lokale
    konfigurasjonsfilene er i
    <filename class="directory">/etc/tmpfiles.d</filename>. Filer i
    <filename class="directory">/etc/tmpfiles.d</filename> overstyrer
    filer med samme navn i
    <filename class="directory">/usr/lib/tmpfiles.d</filename>. Se
    <ulink role='man' url='&man;tmpfiles.d.5'>tmpfiles.d(5)</ulink> manualside
    for filformat detaljer.</para>

    <para>
      Merk at syntaksen for
      <filename>/usr/lib/tmpfiles.d/*.conf</filename> filer kan være
      forvirrende. For eksempel standard sletting av filer i /tmp mappen
      ligger i <filename>/usr/lib/tmpfiles.d/tmp.conf</filename> med
      linjen:

<screen role="nodump">q /tmp 1777 root root 10d</screen>

      Typefeltet, q, diskuterer å lage et undervolum med kvoter som
      egentlig bare er aktuelt for btrfs filsystemer. Den refererer til type v
      som igjen refererer til type d (mappe). Dette skaper deretter den
      spesifiserte mappen hvis den ikke er til stede og justerer tillatelsene
      og eierskap som spesifisert. Innholdet i mappen vil være
      underlagt tidsbasert opprydding hvis aldersargumentet er spesifisert.
     </para>

     <para>
      Hvis standardparametrene ikke er ønsket, bør filen
      bli kopiert til <filename class="directory">/etc/tmpfiles.d</filename>
      og redigert etter ønske. For eksempel:

<screen role="nodump"><userinput>mkdir -p /etc/tmpfiles.d
cp /usr/lib/tmpfiles.d/tmp.conf /etc/tmpfiles.d</userinput></screen>
     </para>

  </sect2>

  <sect2>
    <title>Overstyre standard tjenesteatferd</title>

    <para>Parametrene til en enhet kan overstyres ved å opprette en mappe
    og en konfigurasjonsfil i <filename
    class="directory">/etc/systemd/system</filename>. For eksempel:</para>

<screen role="nodump"><userinput>mkdir -pv /etc/systemd/system/foobar.service.d

cat > /etc/systemd/system/foobar.service.d/foobar.conf &lt;&lt; EOF
<literal>[Service]
Restart=always
RestartSec=30</literal>
EOF</userinput></screen>

     <para>Se <ulink role='man'
     url='&man;systemd.unit.5'>systemd.unit(5)</ulink> manualside for mer
     informasjon. Etter å ha opprettet konfigurasjonsfilen, kjør
     <userinput>systemctl daemon-reload</userinput> og <userinput>systemctl
     restart foobar</userinput> for å aktivere endringene i en tjeneste.</para>

  </sect2>

  <sect2>
    <title>Feilsøking av oppstartssekvensen</title>

    <para>I stedet for vanlige skallskript som brukes i SysVinit eller BSD stil init
    systemer, bruker systemd et enhetlig format for ulike typer oppstarts
    filer (eller enheter). Kommandoen <command>systemctl</command> brukes for å
    aktivere, deaktivere, kontrollere tilstand og få status for enhetsfiler. Her
    er noen eksempler på ofte brukte kommandoer:</para>

    <itemizedlist>
       <listitem>
         <para><command>systemctl list-units -t <replaceable>&lt;service&gt;</replaceable> [--all]</command>:
         viser innlastede enhetsfiler av typen service.</para>
       </listitem>
       <listitem>
         <para><command>systemctl list-units -t <replaceable>&lt;target&gt;</replaceable> [--all]</command>:
         viser innlastede enhetsfiler av typen target.</para>
       </listitem>
       <listitem>
         <para><command>systemctl show -p Wants <replaceable>&lt;multi-user.target&gt;</replaceable></command>:
         viser alle enheter som er avhengige av flerbrukermålet. Targets er
         spesielle enhetsfiler som er analoge med kjørenivåer under
         SysVinit.</para>
       </listitem>
       <listitem>
         <para><command>systemctl status <replaceable>&lt;servicename.service&gt;</replaceable></command>:
         viser statusen til servicename service. .service utvidelsen
         kan utelates hvis det ikke finnes andre enhetsfiler med samme navn,
         for eksempel .socket-filer (som lager en lyttekontakt som gir
         lignende funksjonalitet som inetd/xinetd).</para>
       </listitem>
    </itemizedlist>

  </sect2>

  <sect2>
    <title>Arbeide med Systemd Journal</title>

    <para>Logging på et system oppstartet med systemd håndteres med
    systemd-journald (som standard), i stedet for en typisk unix syslog nisse (daemon).
    Du kan også legge til en normal syslog nisse og la begge operere side ved siden av
    hverandre om ønskelig. Systemd-journald programmet lagrer journaloppføringer i et
    binært format i stedet for en ren tekstloggfil. Å bistå med å
    analysere filen, kommandoen <command>journalctl</command> er gitt.
    Her er noen eksempler på ofte brukte kommandoer:</para>

    <itemizedlist>
       <listitem>
         <para><command>journalctl -r</command>: viser alt innholdet i
         journal i omvendt kronologisk rekkefølge.</para>
       </listitem>
       <listitem>
         <para><command>journalctl -u <replaceable>UNIT</replaceable></command>:
         viser journalpostene knyttet til den angitte UNIT
         filen.</para>
       </listitem>
       <listitem>
         <para><command>journalctl -b[=ID] -r</command>: viser journal
         oppføringer siden sist vellykkede oppstart (eller for oppstarts-ID) i omvendt
         kronologisk rekkefølge.</para>
       </listitem>
       <listitem>
         <para><command>journalctl -f</command>: gir lignende funksjonalitet
         som tail -f (follow).</para>
       </listitem>
    </itemizedlist>

  </sect2>

  <sect2>
    <title>Arbeide med kjernedumper</title>

    <para>Kjernedumper er nyttige for å feilsøke programmer som krasjet, spesielt
    når en nisseprosess krasjer. På systemd oppstartede systemer kjernedumping
    håndteres av <command>systemd-coredump</command>.  Det vil
    logge kjernedumpen i journalen og oppbevare selve kjernedumpen i
    <filename class="directory">/var/lib/systemd/coredump</filename>.
    For å hente og behandle kjernedumper, <command>coredumpctl</command>
    verktøy er gitt. Her er noen eksempler på ofte brukte kommandoer:
    </para>

    <itemizedlist>
      <listitem>
        <para><command>coredumpctl -r</command>: viser alle kjernedumper i
        omvendt kronologisk rekkefølge.</para>
      </listitem>
      <listitem>
        <para><command>coredumpctl -1 info</command>: viser informasjonen
        fra siste kjernedump.</para>
      </listitem>
      <listitem>
        <para><command>coredumpctl -1 debug</command>: laster den siste kjernedumpen
        inn i <ulink url="&blfs-book;general/gdb.html">GDB</ulink>.
        </para>
      </listitem>
    </itemizedlist>

    <para>Kjernedumper kan bruke mye diskplass. Maksimal diskplass
    brukt av kjernedumper kan begrenses ved å lage en konfigurasjonsfil i
    <filename class="directory">/etc/systemd/coredump.conf.d</filename>.
    For eksempel:</para>

<screen role="nodump"><userinput>mkdir -pv /etc/systemd/coredump.conf.d

cat &gt; /etc/systemd/coredump.conf.d/maxuse.conf &lt;&lt; EOF
<literal>[Coredump]
MaxUse=5G</literal>
EOF</userinput></screen>

    <para>Se <ulink role='man' url='&man;systemd-coredump.8'>systemd-coredump(8)</ulink>,
    <ulink role='man' url='&man;coredumpctl.1'>coredumpctl(1)</ulink>, og
    <ulink role='man'
    url='&man;coredump.conf.d.5'>coredump.conf.d(5)</ulink> manualsidene for
    mer informasjon.</para>
  </sect2>

  <sect2>
    <title>Langvarige prosesser</title>

    <para>Fra og med systemd-230 blir alle brukerprosesser drept når en brukerøkt
    er avsluttet, selv om nohup brukes, eller prosessen bruker
    <function>daemon()</function> eller <function>setsid()</function> funksjoner.
    Dette er en bevisst endring fra et historisk tillatt miljø til et
    mer restriktiv. Den nye atferden kan forårsake problemer hvis du er avhengig av
    at langvarige programmer (f.eks., <command>screen</command> eller
    <command>tmux</command>) forblir aktive etter avsluttet brukerøkt.
    Det er tre måter å aktivere langvarige prosesser til å være aktiv etter at en brukerøkt
    er avsluttet.</para>

    <itemizedlist>
      <listitem>
        <para>
          <emphasis>Aktiver langvarig prosess for kun utvalgte brukere</emphasis>:
          Vanlige brukere har tillatelse til å aktivere prosessforlenging
          med kommandoen <command>loginctl enable-linger</command> for deres
          egen bruker. Systemadministratorer kan bruke den samme kommandoen med et
          <parameter>user</parameter> argument for å aktivere for en bruker. Denne brukeren
          kan da bruke <command>systemd-run</command> kommandoen for å starte
          langvarige prosesser. For eksempel: <command>systemd-run --scope
          --user /usr/bin/screen</command>. Hvis du aktiverer forlenging for din
          bruker, vil user@.service forbli selv etter at alle påloggingsøktene er
          lukket, og vil automatisk starte ved systemoppstart. Dette har
          fordelen av å eksplisitt tillate og ikke tillate prosesser å kjøre
          etter at brukerøkten er avsluttet, men bryter bakoverkompatibiliteten
          med verktøy som <command>nohup</command> og verktøy som bruker
          <function>daemon()</function>.
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>Aktiver systemomfattende langvarig prosess</emphasis>:
          Du kan angi <parameter>KillUserProcesses=no</parameter> i
          <filename>/etc/systemd/logind.conf</filename> for å muliggjøre prosessforlenging
          globalt for alle brukere. Dette har fordelen av å gjøre det gamle
          metoden tilgjengelig for alle brukere på bekostning av eksplisitt kontroll.
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis>Deaktiver ved byggetid</emphasis>: Du kan deaktivere
          systemforlenging som standard mens du bygger systemd ved å legge til bryteren
          <parameter>-D default-kill-user-processes=false</parameter> til
          <command>meson</command> kommandoen for systemd. Dette
          deaktiverer helt systemds evne til å drepe brukerprosesser under
          øktslutt.
        </para>
      </listitem>
    </itemizedlist>

  </sect2>

</sect1>
