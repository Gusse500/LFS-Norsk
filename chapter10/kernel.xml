<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-bootable-kernel" role="wrap">
  <?dbhtml filename="kernel.html"?>

  <sect1info condition="script">
    <productname>kernel</productname>
    <productnumber>&linux-version;</productnumber>
    <address>&linux-url;</address>
  </sect1info>

  <title>Linux-&linux-version;</title>

  <indexterm zone="ch-bootable-kernel">
    <primary sortas="a-Linux">Linux</primary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <para>Linux pakken inneholder Linux kjernen.</para>

    <segmentedlist>
      <segtitle>&buildtime;</segtitle>
      <segtitle>&diskspace;</segtitle>

      <seglistitem>
        <seg>&linux-knl-sbu;</seg>
        <seg>&linux-knl-du;</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installasjon av kjernen</title>

    <para>Å bygge kjernen innebærer noen få trinn&mdash;konfigurasjon,
    kompilering og installasjon. Les <filename>README</filename> filen
    i kjernekildetreet for alternative metoder til måten denne boken
    konfigurerer kjernen på.</para>

    <important>
      <para>
        Å bygge Linuxkjernen for første gang er en av de mest
        utfordrende oppgaver i LFS. Å få det riktig avhenger av den spesifikke
        maskinvaren for målsystemet og dine spesifikke behov. Det er
        nesten 12 000 konfigurasjonselementer som er tilgjengelige for kjernen,
        selv om bare en tredjedel av dem er nødvendig for de fleste datamaskiner.
        LFS redaktørene anbefaler at brukere som ikke er kjent med denne prosessen følger
        prosedyrene nedenfor ganske nøye. Målet er å få et
        innledende system til et punkt hvor du kan logge inn på kommandolinjen når
        du starter på nytt senere i <xref linkend="ch-finish-reboot"/>.  På dette punktet
        er optimering og tilpasning ikke et mål.
      </para>

      
      <para>
        For generell informasjon om kjernekonfigurasjon se <ulink
        url="&hints-root;kernel-configuration.txt"/>.  Ytterligere informasjon
        om konfigurering og bygging av kjernen finner du på <ulink
        url="&anduin-sources;/kernel-nutshell/"/>.
		Disse referansene er litt
        utdatert, men gir likevel en rimelig oversikt over prosessen.
      </para>

      <para>
        Hvis alt annet feiler, kan du be om hjelp på <ulink
        url="https://www.linuxfromscratch.org/mail.html">lfs-support</ulink>
        mailingliste. Vær oppmerksom på at du må abonnere på listen
        for å unngå spam.
      </para>
    </important>

	<para>Forbered for kompilering ved å kjøre følgende kommando:</para>

<screen><userinput remap="pre">make mrproper</userinput></screen>

    <para>Dette sikrer at kjernetreet er helt rent.
    Kjerneteamet anbefaler at denne kommandoen utstedes før hver
    kjernekompilering. Ikke stol på at kildetreet er rent etter
    utpakking.</para>

    <para>Det er flere måter å konfigurere kjernealternativene på. Vanligvis,
    gjøres dette for eksempel gjennom et menydrevet grensesnitt:</para>

<screen role="nodump"><userinput>make menuconfig</userinput></screen>

    <variablelist>
      <title>Betydningen av valgfrie make miljøvariabler:</title>

      <varlistentry>
        <term><parameter>LANG=&lt;host_LANG_value&gt; LC_ALL=</parameter></term>
        <listitem>
          <para>Dette etablerer lokalinnstillingen til den som brukes på
          verten. Dette kan være nødvendig for et riktig menyconfig ncurses grensesnitt
          linjetegning på en UTF-8 linux tekstkonsoll.</para>

          <para>Hvis brukt, sørg for å erstatte
          <replaceable>&lt;host_LANG_value&gt;</replaceable> med verdien av
          <envar>$LANG</envar> variabel fra verten din.  Du kan
          alternativt bruke vertens verdi av <envar>$LC_ALL</envar>
          eller <envar>$LC_CTYPE</envar>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><command>make menuconfig</command></term>
        <listitem>
          <para>Dette starter et ncurses menydrevet grensesnitt. For andre
          (grafiske) grensesnitt, skriv <command>make help</command>.</para>
        </listitem>
      </varlistentry>
    </variablelist>

    <!-- Support for compiling a keymap into the kernel is deliberately removed -->


    <note>
      <para>Et godt utgangspunkt for å sette opp kjernekonfigurasjonen er å
      kjøre <command>make defconfig</command>. Dette vil sette basekonfigurasjonen
      til en god tilstand som tar din nåværende systemarkitektur
      i betraktning.</para>

	  <para>Sørg for å aktivere/deaktivere/stille inn følgende funksjoner, ellers kan systemet
      ikke fungere riktig eller starte opp i det hele tatt:</para>

      <screen role="nodump" revision="sysv">Processor type and features ---&gt;
   [*] Build a relocatable kernel [CONFIG_RELOCATABLE]
   [*]   Randomize the address of the kernel image (KASLR) [CONFIG_RANDOMIZE_BASE]
General setup ---&gt;
   [ ] Compile the kernel with warnings as errors [CONFIG_WERROR]
   CPU/Task time and stats accounting ---&gt;
      [*] Pressure stall information tracking [CONFIG_PSI]
      [ ]   Require boot parameter to enable pressure stall information tracking [CONFIG_PSI_DEFAULT_DISABLED]
   &lt; &gt; Enable kernel headers through /sys/kernel/kheaders.tar.xz [CONFIG_IKHEADERS]
   [*] Control Group support [CONFIG_CGROUPS]   ---&gt;
      [*] Memory controller [CONFIG_MEMCG]
   [ ] Configure standard kernel features (expert users) [CONFIG_EXPERT]
General architecture-dependent options  ---&gt;
   [*] Stack Protector buffer overflow detection [CONFIG_STACKPROTECTOR]
   [*]   Strong Stack Protector [CONFIG_STACKPROTECTOR_STRONG]
Device Drivers  ---&gt;
  Graphics support ---&gt;
   Frame buffer Devices ---&gt;
      &lt;*&gt; Support for frame buffer devices ---&gt;
   Console display driver support ---&gt;
      [*] Framebuffer Console support [CONFIG_FRAMEBUFFER_CONSOLE]
  Generic Driver Options  ---&gt;
   [ ] Support for uevent helper [CONFIG_UEVENT_HELPER]
   [*] Maintain a devtmpfs filesystem to mount at /dev [CONFIG_DEVTMPFS]
   [*]   Automount devtmpfs at /dev, after the kernel mounted the rootfs [CONFIG_DEVTMPFS_MOUNT]</screen>

      <screen role="nodump" revision="systemd">Processor type and features ---&gt;
   [*] Build a relocatable kernel [CONFIG_RELOCATABLE]
   [*]   Randomize the address of the kernel image (KASLR) [CONFIG_RANDOMIZE_BASE]
General setup ---&gt;
   [ ] Compile the kernel with warnings as errors [CONFIG_WERROR]
   [ ] Auditing Support [CONFIG_AUDIT]
   CPU/Task time and stats accounting ---&gt;
      [*] Pressure stall information tracking [CONFIG_PSI]
	  [ ]   Require boot parameter to enable pressure stall information tracking [CONFIG_PSI_DEFAULT_DISABLED]
   &lt; &gt; Enable kernel headers through /sys/kernel/kheaders.tar.xz [CONFIG_IKHEADERS]
   [*] Control Group support [CONFIG_CGROUPS]   ---&gt;
      [*] Memory controller [CONFIG_MEMCG]
   [ ] Configure standard kernel features (expert users) [CONFIG_EXPERT]
General architecture-dependent options  ---&gt;
   [*] Enable seccomp to safely compute untrusted bytecode [CONFIG_SECCOMP]
   [*] Stack Protector buffer overflow detection [CONFIG_STACKPROTECTOR]
   [*]   Strong Stack Protector [CONFIG_STACKPROTECTOR_STRONG]
[*] Networking support  ---&gt;   [CONFIG_NET]
   Networking options  ---&gt;
      [*] TCP/IP networking [CONFIG_INET]
      &lt;*&gt;   The IPv6 protocol [CONFIG_IPV6]
Device Drivers  ---&gt;
  Generic Driver Options  ---&gt;
      [ ] Support for uevent helper [CONFIG_UEVENT_HELPER]
      [*] Maintain a devtmpfs filesystem to mount at /dev [CONFIG_DEVTMPFS]
      [*]   Automount devtmpfs at /dev, after the kernel mounted the rootfs [CONFIG_DEVTMPFS_MOUNT]
      Firmware Loader ---&gt;
         [ ] Enable the firmware sysfs fallback mechanism [CONFIG_FW_LOADER_USER_HELPER]
   Firmware Drivers   ---&gt;
      [*] Export DMI identification via sysfs to userspace [CONFIG_DMIID]
   Graphics support ---&gt;
      Frame buffer Devices ---&gt;
         &lt;*&gt; Support for frame buffer devices ---&gt;
      Console display driver support ---&gt;
         [*] Framebuffer Console support [CONFIG_FRAMEBUFFER_CONSOLE]
File systems  ---&gt;
   [*] Inotify support for userspace [CONFIG_INOTIFY_USER]
       Pseudo filesystems  ---&gt;
        [*] Tmpfs POSIX Access Control Lists [CONFIG_TMPFS_POSIX_ACL]</screen>

      <para>Aktiver noen tilleggsfunksjoner hvis du bygger et 64-bit
      system. Hvis du bruker menuconfig, aktiver dem i rekkefølgen
      <parameter>CONFIG_PCI_MSI</parameter> først, deretter
      <parameter>CONFIG_IRQ_REMAP</parameter>, til sist
      <parameter>CONFIG_X86_X2APIC</parameter> fordi et alternativ kun
      vises etter at avhengighetene er valgt.</para>

      <screen role="nodump">Processor type and features ---&gt;
  [*] Support x2apic [CONFIG_X86_X2APIC]
Device Drivers ---&gt;
  [*] PCI Support ---&gt; [CONFIG_PCI]
    [*] Message Signaled Interrupts (MSI and MSI-X) [CONFIG_PCI_MSI]
  [*] IOMMU Hardware Support ---&gt; [CONFIG_IOMMU_SUPPORT]
    [*] Support for Interrupt Remapping [CONFIG_IRQ_REMAP]</screen>

      <para>Hvis du bygger et 32-bits system som kjører på en maskinvare
      med mer enn 4 GB RAM, juster konfigurasjonen slik at kjernen vil
      kunne bruke opptil 64 GB fysisk RAM:</para>

      <screen role="nodump">Processor type and features ---&gt;
  High Memory Support ---&gt;
    (X) 64GB [CONFIG_HIGHMEM64G]</screen>

      <para>Hvis partisjonen for LFS-systemet er i en NVME SSD (dvs
      enhetsnoden for partisjonen er <filename>/dev/nvme*</filename>
      i stedet for <filename>/dev/sd*</filename>), aktivere NVME støtte ellers
      vil ikke LFS systemet starte:</para>

      <screen role="nodump">Device Drivers ---&gt;
  NVME Support ---&gt;
    &lt;*&gt; NVM Express block device [CONFIG_BLK_DEV_NVME]</screen>
    </note>

    <note revision="systemd">
      <para>Mens "IPv6-protokollen" ikke strengt tatt
      kreves, anbefales det sterkt av systemd utviklerne.</para>
    </note>

    <para>Det er flere andre alternativer som kan være ønsket
    avhengig av kravene til systemet. For en liste over nødvendige alternativer
    for BLFS pakker, se <ulink
    url="&lfs-root;blfs/view/&short-version;/longindex.html#kernel-config-index">BLFS
    Indeks over kjerneinnstillinger</ulink></para>

    <note>
      <para>Hvis vertsmaskinvaren din bruker UEFI og du ønsker å starte opp
      LFS systemet med det, bør du justere noen kjernekonfigurasjon
      som på følgende <ulink url="&blfs-book;postlfs/grub-setup.html#uefi-kernel">
      BLFS side</ulink> <emphasis role='bold'>selv om du bruker
      UEFI oppstartslaster fra vertsdistroen</emphasis>.</para>
    </note>

    <variablelist>
      <title>Begrunnelsen for de ovennevnte konfigurasjonselementene:</title>

      <varlistentry>
        <term><parameter>Randomize the address of the kernel image (KASLR)</parameter></term>
        <listitem>
          <para>Aktiver ASLR for kjernebilde for å redusere noen angrep basert
          på faste adresser til sensitive data eller kode i kjernen.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
          <parameter>
            Compile the kernel with warnings as errors
          </parameter>
        </term>
        <listitem>
          <para>Dette kan forårsake bygningsfeil hvis kompilatoren og/eller
          konfigurasjonen er forskjellig fra kjernens
          utviklere.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
          <parameter>
            Enable kernel headers through /sys/kernel/kheaders.tar.xz
          </parameter>
        </term>
        <listitem>
          <para>Dette vil kreve <command>cpio</command> for å bygge kjernen.
          <command>cpio</command> er ikke installert av LFS.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>
          <parameter>
            Configure standard kernel features (expert users)
          </parameter>
        </term>
        <listitem>
          <para>Dette vil gjøre at noen alternativer vises i konfigurasjonsgrensesnittet,
          men å endre disse alternativene kan være farlig. Ikke bruk
          dette med mindre du vet hva du gjør.</para>
        </listitem>
      </varlistentry>

	  <varlistentry>
        <term><parameter>Strong Stack Protector</parameter></term>
        <listitem>
          <para>Aktiver SSP for kjernen. Vi har aktivert det for hele
          brukerplassen med <parameter>--enable-default-ssp</parameter>
          konfigureringen for GCC, men kjernen bruker ikke GCC standardinnstillingen
          for SSP. Vi aktiverer det eksplisitt her.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>Support for uevent helper</parameter></term>
        <listitem>
          <para>Å ha dette alternativet satt kan forstyrre enhetens
          behandling ved bruk av Udev. </para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>Maintain a devtmpfs</parameter></term>
        <listitem>
          <para>Dette vil opprette automatiserte enhetsnoder som er befolket av
          kjerne, selv uten at Udev kjører. Udev kjører så på toppen av dette,
          administrere tillatelser og legge til symbolkoblinger. Denne konfigurasjonen
          element er nødvendig for alle brukere av Udev.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>Automount devtmpfs at /dev</parameter></term>
        <listitem>
          <para>Dette vil montere kjernevisningen til enhetene på /dev
          ved bytte til rotfilsystem rett før start av
          init.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>Framebuffer Console support</parameter></term>
        <listitem>
          <para>Dette er nødvendig for å vise Linux konsollen på en ramme
          bufferenhet. For å la kjernen skrive ut feilsøkingsmeldinger på et
          tidlig oppstartsstadium, bør den ikke bygges som en kjernemodul
          med mindre en initramfs vil bli brukt. Og hvis
          <option>CONFIG_DRM</option> (Direct Rendering Manager) er aktivert,
          er det sannsynlig at <option>CONFIG_DRM_FBDEV_EMULATION</option> (Enable
          legacy fbdev support for your modesetting driver) bør være
          aktivert også.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>Support x2apic</parameter></term>
        <listitem>
          <para>Støtte for å kjøre avbruddskontrolleren for 64-bit x86
          prosessorer i x2APIC-modus. x2APIC kan være aktivert av fastvare på
          64-bit x86-systemer, og en kjerne uten dette alternativet aktivert vil få
          panikk ved oppstart hvis x2APIC er aktivert av fastvare. Dette alternativet
          har ingen effekt, men gjør heller ingen skade hvis x2APIC er deaktivert av
          fastvare.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Alternativt, <command>make oldconfig</command> er kanskje mer
    hensiktsmessig i noen situasjoner. Se <filename>README</filename>
    filen for mer informasjon.</para>

    <para>Hvis ønskelig, hopp over kjernekonfigurasjonen ved å kopiere kjernens
    konfigurasjonsfil, <filename>.config</filename>, fra vertssystemet
    (forutsatt at den er tilgjengelig) til den utpakkede <filename
    class="directory">linux-&linux-version;</filename> mappen. Derimot,
    vi anbefaler ikke dette alternativet. Det er ofte bedre å utforske alle
    konfigurasjonsmenyer og lage kjernekonfigurasjonen fra
    grunnen av.</para>

    <para>Kompiler kjernebildet og modulene:</para>

<screen><userinput remap="make">make</userinput></screen>

    <para>Hvis du bruker kjernemoduler, modulkonfigurasjon i <filename
    class="directory">/etc/modprobe.d</filename> kan være nødvendig.
    Informasjon knyttet til moduler og kjernekonfigurasjon er
    lokalisert i <xref linkend="ch-config-udev"/> og kjerne
    dokumentasjon i <filename
    class="directory">linux-&linux-version;/Documentation</filename> mappen.
    Også, <filename>modprobe.d(5)</filename> kan være av interesse.</para>

    <para>Med mindre modulstøtte er deaktivert i kjernekonfigurasjonen,
    installere modulene med:</para>

<screen><userinput remap="install">make modules_install</userinput></screen>

    <para>Etter at kjernekompileringen er fullført, er flere trinn
    nødvendig for å fullføre installasjonen. Noen filer må kopieres til
    <filename class="directory">/boot</filename> mappen.</para>

    <caution>
      <para>Hvis du har bestemt deg for å bruke et separat &boot-dir; partisjon for
      LFS systemet (kanskje dele en &boot-dir; partisjon med vertsdistroen
      ), filene som er kopiert nedenfor, skal gå dit. Den enkleste måten å
      gjør det er å opprette oppføringen for &boot-dir; i &fstab; først (les
      forrige seksjon for detaljer), utfør deretter følgende kommando
      som &root; bruker i
      <emphasis>chroot environment</emphasis>:</para>

<screen role="nodump"><userinput>mount /boot</userinput></screen>

      <para>Stien til enhetsnoden er utelatt i kommandoen fordi
      <command>mount</command> kan lese den fra &fstab;.</para>
    </caution>

    <para>Stien til kjernebildet kan variere avhengig av plattformen
    som er brukt. Filnavnet nedenfor kan endres for å passe din smak, men stammen av
    filnavnet skal være <emphasis>vmlinuz</emphasis> for å være kompatibel med
    det automatiske oppsettet av oppstartsprosessen beskrevet i neste avsnitt. De
    følgende kommandoene antar et x86 arkitektur:</para>

<screen><userinput remap="install">cp -iv arch/x86/boot/bzImage /boot/vmlinuz-&linux-version;-lfs-&version;</userinput></screen>

    <para><filename>System.map</filename> er en symbolfil for kjernen.
    Den kartlegger funksjonsinngangspunktene til hver funksjon i kjernens API,
    samt adressene til kjernedatastrukturene for kjøringen av
    kjernen. Den brukes som en ressurs når man undersøker kjerneproblemer.
    Utfør følgende kommando for å installere kartfilen:</para>

<screen><userinput remap="install">cp -iv System.map /boot/System.map-&linux-version;</userinput></screen>

    <para>Kjernens konfigurasjonsfil <filename>.config</filename>
    produsert av <command>make menuconfig</command> steget
    ovenfor inneholder alle konfigurasjonsvalgene for kjernen
    som nettopp ble kompilert. Det er en god idé å beholde denne filen for fremtidig
    referanse:</para>

<screen><userinput remap="install">cp -iv .config /boot/config-&linux-version;</userinput></screen>

    <para>Installer dokumentasjonen for Linux kjernen:</para>

<screen><userinput remap="install">cp -r Documentation -T /usr/share/doc/linux-&linux-version;</userinput></screen>

    <para>Det er viktig å merke seg at filene i kjernekildens
    mappen ikke eies av <emphasis>root</emphasis>. Når en
    pakke pakkes ut som bruker <emphasis>root</emphasis> (som vi gjorde
    inne i chroot), filene har bruker- og gruppe-IDer for hva som helst
    de var på pakkerens datamaskin. Dette er vanligvis ikke et problem
    for enhver pakke som skal installeres fordi kildetreet blir
    fjernet etter installasjonen. Imidlertid er Linux kildetreet
    ofte beholdt i lang tid. På grunn av dette er det en sjanse
    at hvilken bruker-ID pakkeren brukte vil bli tildelt noen
    på maskinen. Den personen ville da ha skrivetilgang til kjernens
    kilde.</para>

    <note>
      <para>I mange tilfeller må konfigurasjonen av kjernen være
      oppdatert for pakker som vil bli installert senere i BLFS. I motsetning til
      andre pakker, er det ikke nødvendig å fjerne kjernekildetreet
      etter at den nybygde kjernen er installert.</para>

      <para>Hvis kjernekildetreet skal beholdes, kjør
      <command>chown -R 0:0</command> på <filename
      class="directory">linux-&linux-version;</filename> mappen å sikre
      at alle filer eies av brukeren <emphasis>root</emphasis>.</para>
    </note>

    <warning>
      <para>Noe kjernedokumentasjon anbefaler å opprette en symbolkobling fra
      <filename class="symlink">/usr/src/linux</filename> som peker på kjernens
      kildemappe. Dette er spesifikt for kjerner før 2.6-serien og
      <emphasis>må ikke</emphasis> opprettes på et LFS system, for det kan forårsake
      problemer for pakker du kanskje ønsker å bygge når basis LFS systemet er
      fullstendig.</para>
    </warning>

    <warning>
      <para>Deklarasjonene i systemets <filename
      class="directory">include</filename> mappe (<filename
      class="directory">/usr/include</filename>) bør
      <emphasis>alltid</emphasis> være de som Glibc ble kompilert mot,
      det vil si de desinfiserte deklarasjonene installert i <xref
      linkend="ch-tools-linux-headers"/>.  Derfor bør de
      <emphasis>aldri</emphasis> erstattes av enten de rå kjernedeklarasjonene
      eller andre kjernerensede deklarasjoner.</para>
    </warning>

  </sect2>

  <sect2 id="conf-modprobe" role="configuration">
    <title>Konfigurere rekkefølgen på Linux modullasting</title>

    <indexterm zone="conf-modprobe">
      <primary sortas="e-/etc/modprobe.d/usb.conf">/etc/modprobe.d/usb.conf</primary>
    </indexterm>

    <para>Mesteparten av tiden lastes Linux moduler automatisk, men
    noen ganger trenger den en bestemt retning. Programmet som laster
    moduler, <command>modprobe</command> eller <command>insmod</command>, bruker
    <filename>/etc/modprobe.d/usb.conf</filename> for dette formålet. Denne filen
    må opprettes slik at hvis USB-driverne (ehci_hcd, ohci_hcd og
    uhci_hcd) har blitt bygget som moduler, vil de bli lastet inn i riktig
    rekkefølge; ehci_hcd må lastes før ohci_hcd og uhci_hcd i rekkefølge
    for å unngå at det sendes ut en advarsel ved oppstart.</para>

    <para>Opprett en ny fil <filename>/etc/modprobe.d/usb.conf</filename> ved å kjøre
    følgende:</para>

<screen><userinput>install -v -m755 -d /etc/modprobe.d
cat &gt; /etc/modprobe.d/usb.conf &lt;&lt; "EOF"
<literal># Begin /etc/modprobe.d/usb.conf

install ohci_hcd /sbin/modprobe ehci_hcd ; /sbin/modprobe -i ohci_hcd ; true
install uhci_hcd /sbin/modprobe ehci_hcd ; /sbin/modprobe -i uhci_hcd ; true

# End /etc/modprobe.d/usb.conf</literal>
EOF</userinput></screen>

  </sect2>

  <sect2 id="contents-kernel" role="content">
    <title>Innhold i Linux</title>

    <segmentedlist>
      <segtitle>Installerte filer</segtitle>
      <segtitle>Installerte mapper</segtitle>

      <seglistitem>
        <seg>config-&linux-version;,
        vmlinuz-&linux-version;-lfs-&version;,
        og System.map-&linux-version;</seg>
        <seg>/lib/modules, /usr/share/doc/linux-&linux-version;</seg>
      </seglistitem>
    </segmentedlist>

    <variablelist>
      <bridgehead renderas="sect3">Korte beskrivelser</bridgehead>
      <?dbfo list-presentation="list"?>
      <?dbhtml list-presentation="table"?>

      <varlistentry id="config">
        <term><filename>config-&linux-version;</filename></term>
        <listitem>
          <para>Inneholder alle konfigurasjonsvalgene for kjernen</para>
          <indexterm zone="ch-bootable-kernel config">
            <primary sortas="e-/boot/config">/boot/config-&linux-version;</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="lfskernel">
        <term><filename>vmlinuz-&linux-version;-lfs-&version;</filename></term>
        <listitem>
          <para>Motoren til Linux systemet. Når du slår på datamaskinen,
          er kjernen den første delen av operativsystemet som blir lastet.
          Den oppdager og initialiserer alle komponenter i datamaskinens maskinvare,
          gjør deretter disse komponentene tilgjengelige som et tre med filer til
          programvarer og forvandler en enkelt CPU til en multitasking-maskin
          med å kjøre mange programmer tilsynelatende samtidig</para>
          <indexterm zone="ch-bootable-kernel lfskernel">
            <primary sortas="b-lfskernel">lfskernel-&linux-version;</primary>
          </indexterm>
        </listitem>
      </varlistentry>

      <varlistentry id="System.map">
        <term><filename>System.map-&linux-version;</filename></term>
        <listitem>
          <para>En liste over adresser og symboler; den kartlegger inngangspunktene og
          adresser til alle funksjonene og datastrukturene i
          kjernen</para>
          <indexterm zone="ch-bootable-kernel System.map">
            <primary sortas="e-/boot/System.map">/boot/System.map-&linux-version;</primary>
          </indexterm>
        </listitem>
      </varlistentry>

    </variablelist>

  </sect2>

</sect1>
