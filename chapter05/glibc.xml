<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-tools-glibc" role="wrap">
  <?dbhtml filename="glibc.html"?>

  <sect1info condition="script">
    <productname>glibc</productname>
    <productnumber>&glibc-version;</productnumber>
    <address>&glibc-url;</address>
  </sect1info>

  <title>Glibc-&glibc-version;</title>

  <indexterm zone="ch-tools-glibc">
    <primary sortas="a-Glibc">Glibc</primary>
    <secondary>tools</secondary>
  </indexterm>

  <sect2 role="package">
    <title/>

    <xi:include xmlns:xi="http://www.w3.org/2001/XInclude"
    href="../chapter08/glibc.xml"
    xpointer="xpointer(/sect1/sect2[1]/para[1])"/>

    <segmentedlist>
      <segtitle>&buildtime;</segtitle>
      <segtitle>&diskspace;</segtitle>

      <seglistitem>
        <seg>&glibc-tmp-sbu;</seg>
        <seg>&glibc-tmp-du;</seg>
      </seglistitem>
    </segmentedlist>

  </sect2>

  <sect2 role="installation">
    <title>Installasjon av Glibc</title>

    <para>Først oppretter du en symbolsk lenke for LSB kompalitet. I tillegg,
    for x86_64 oppretter du en symbolsk kompatibilitetskobling som kreves for korrekt
    operasjon av den dynamiske biblioteklasteren:</para>

<screen><userinput remap="pre">case $(uname -m) in
    i?86)   ln -sfv ld-linux.so.2 $LFS/lib/ld-lsb.so.3
    ;;
    x86_64) ln -sfv ../lib/ld-linux-x86-64.so.2 $LFS/lib64
            ln -sfv ../lib/ld-linux-x86-64.so.2 $LFS/lib64/ld-lsb-x86-64.so.3
    ;;
esac</userinput></screen>

    <note>
      <para>
        Kommandoen ovenfor er riktig. <command>ln</command> kommandoen har
        flere syntaktiske versjoner, så sørg for å sjekke
        <command>info coreutils ln</command> og <ulink role='man'
        url='&man;ln.1'>ln(1)</ulink> før du rapporterer hva som kan se ut til å være
        en feil.
      </para>
    </note>

    <para>Noen Glibc programmer bruker den FHS inkompatible
    <filename class="directory">/var/db</filename> mappen for å lagre deres
    kjøretidsdata. Bruk følgende oppdatering for å få slike programmer til å lagre sine
    kjøretidsdata på FHS kompatible steder:</para>

<screen><userinput remap="pre">patch -Np1 -i ../glibc-&glibc-version;-fhs-1.patch</userinput></screen>

    <para>Glibc dokumentasjonen anbefaler å bygge Glibc
    i en dedikert byggemappe:</para>

<screen><userinput remap="pre">mkdir -v build
cd       build</userinput></screen>

    <para>Sørg for at <command>ldconfig</command> og <command>sln</command>
    verktøy er installert i
    <filename class="directory">/usr/sbin</filename>:</para>

<screen><userinput remap="pre">echo "rootsbindir=/usr/sbin" &gt; configparms</userinput></screen>

    <para>Neste, forbered Glibc for kompilering:</para>

<screen><userinput remap="configure">../configure                             \
      --prefix=/usr                      \
      --host=$LFS_TGT                    \
      --build=$(../scripts/config.guess) \
      --enable-kernel=&min-kernel;               \
      --disable-nscd                     \
      libc_cv_slibdir=/usr/lib</userinput></screen>

    <variablelist>
      <title>Betydningen av konfigureringsalternativene:</title>

      <varlistentry>
        <term><parameter>--host=$LFS_TGT, --build=$(../scripts/config.guess)</parameter></term>
        <listitem>
          <para>Den kombinerte effekten av disse bryterne er at Glibcs byggesystem
          konfigurerer seg selv til å være krysskompilert, ved hjelp av krysskoblingen og
          krysskompilator i <filename class="directory">$LFS/tools</filename>.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--enable-kernel=&min-kernel;</parameter></term>
        <listitem>
          <para>Dette forteller Glibc å kompilere biblioteket med støtte
          for &min-kernel; og senere Linux kjerner.  Løsninger for eldre
          kjerner er ikke aktivert.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>libc_cv_slibdir=/usr/lib</parameter></term>
        <listitem>
          <para>Dette sikrer at biblioteket er installert i /usr/lib i stedet
          for standard /lib64 på 64-bits maskiner.</para>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term><parameter>--disable-nscd</parameter></term>
        <listitem>
          <para>Ikke bygg navnetjenesten cache daemon som ikke er
          brukt lenger.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>I løpet av dette stadiet kan følgende advarsel vises:</para>

    <blockquote>
<screen><computeroutput>configure: WARNING:
*** These auxiliary programs are missing or
*** incompatible versions: msgfmt
*** some features will be disabled.
*** Check the INSTALL file for required versions.</computeroutput></screen>
    </blockquote>

    <para>Den manglende eller inkompatible <command>msgfmt</command> programmet er
    generelt ufarlig. Dette <command>msgfmt</command> programmet er en del av
    Gettext pakken som vertsdistribusjonen skal gi.</para>

    <note><para>Det har vært rapporter om at denne pakken kan mislykkes når
    den bygges som en <quote>parallel make</quote>. Hvis dette skjer, kjør make kommandoen på nytt
    med et <option>-j1</option> alternativ.</para></note>

    <para>Kompiler pakken:</para>

<screen><userinput remap="make">make</userinput></screen>

    <para>Installer pakken:</para>

    <warning><para>Hvis <envar>LFS</envar> ikke er riktig innstilt, og til tross for
    anbefalinger, bygger du som
    <systemitem class="username">root</systemitem>, neste kommando vil
    installer den nybygde glibc til vertssystemet ditt, som mest sannsynlig
    vil gjøre det ubrukelig. Så dobbeltsjekk at miljøet er
    riktig innstilt, og at du ikke er &root;, før du kjører følgende kommando.</para></warning>

<screen><userinput remap="install">make DESTDIR=$LFS install</userinput></screen>

    <variablelist>
      <title>Betydningen av <command>make install</command> alternativet:</title>

      <varlistentry>
        <term><parameter>DESTDIR=$LFS</parameter></term>
        <listitem>
          <para><envar>DESTDIR</envar> make variabelen brukes av nesten alle
          pakker for å definere plasseringen der pakken skal være
          installert. Hvis den ikke er angitt, er den standard til root (<filename
          class="directory">/</filename>) mappen. Her spesifiserer vi at
          pakken installeres i <filename class="directory">
          $LFS</filename>, which will become the root directory in <xref linkend=
          "ch-tools-chroot"/>.</para>
        </listitem>
      </varlistentry>

    </variablelist>

    <para>Fiks en hardkodet bane til den kjørbare lasteren i
    <command>ldd</command> skriptet:</para>

<screen><userinput remap="install">sed '/RTLDLIST=/s@/usr@@g' -i $LFS/usr/bin/ldd</userinput></screen>

    <caution>
      <para>På dette tidspunktet er det viktig å stoppe og sikre at de grunnleggende
      funksjoner (kompilering og lenker) til den nye verktøykjeden fungerer som
      forventet. For å utføre en tilregnelighetssjekk, kjør følgende kommandoer:</para>

<screen><userinput>echo 'int main(){}' | $LFS_TGT-gcc -xc -
readelf -l a.out | grep ld-linux</userinput></screen>

      <para>Hvis alt fungerer som det skal, skal det ikke være noen feil,
      og utdata fra den siste kommandoen vil være av formen:</para>

<screen><computeroutput>[Requesting program interpreter: /lib64/ld-linux-x86-64.so.2]</computeroutput></screen>

      <para>Merk at for 32-bits maskiner vil fortolkenavnet være
      <filename>/lib/ld-linux.so.2</filename>.</para>

      <para>Hvis utdataen ikke vises som ovenfor eller det ikke var noen utdata i det hele tatt,
      da er det noe galt. Undersøk og følg trinnene for å finne ut
      hvor problemet er og korriger det. Dette problemet må løses før du
      fortsetter.</para>

      <para>Når alt er bra, rydd opp i testfilene:</para>

<screen><userinput>rm -v a.out</userinput></screen>

    </caution>

    <note><para>Byggingen av pakkene i neste kapittel vil fungere som en
    ekstra sjekk at verktøykjeden er riktig bygget. Hvis noen
    pakker, spesielt binutils-pass2 eller gcc-pass2, ikke klarer å bygges, er det
    en indikasjon på at noe har gått galt med
    tidligere Binutils-, GCC- eller Glibc-installasjoner.</para></note>
<!--
    <para>Nå som vår kryssverktøykjede er fullført, fullfør installasjonen av
    limits.h deklarasjoner. For å gjøre det, kjør et verktøy levert av GCC
    utviklere:</para>

<screen><userinput>$LFS/tools/libexec/gcc/$LFS_TGT/&gcc-version;/install-tools/mkheaders</userinput></screen>
-->
  </sect2>

  <sect2 role="content">
    <title/>

    <para>Detaljer om denne pakken finner du i
    <xref linkend="contents-glibc" role="."/></para>

  </sect2>

</sect1>
