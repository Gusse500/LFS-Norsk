<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-preps-aboutsbus">
  <?dbhtml filename="aboutsbus.html"?>

  <title>Om SBU</title>

  <para>Mange vil gjerne vite på forhånd hvor lenge
  det tar å kompilere og installere hver pakke. Fordi Linux Fra
  Scratch kan bygges på mange forskjellige systemer, er det umulig å
  gi nøyaktige tidsanslag. Den største pakken (Glibc) vil
  ta omtrent 5 minutter på de raskeste systemene, men kan ta
  flere dager på tregere systemer! I stedet for å oppgi faktiske tider,
  vil Standard byggenhet (SBU)
  brukes i stedet.</para>

  <para>SBU fungerer som følgende. Den første pakken som skal kompileres
  fra denne boken er binutils i <xref linkend="chapter-cross-tools"/>. Tiden det tar å
  kompilere med en kjerne er det vi vil referere til som standard
  byggenhet eller SBU. Alle andre kompileringstider vil bli uttrykt i forhold til denne
  tidsenheten.</para>

  <para>Tenk for eksempel på en pakke hvis kompileringstid er 4,5
  SBU. Dette betyr at hvis et system tok 10 minutter å kompilere og
  installer det første passet med binutils, vil det ta
  <emphasis>omtrent</emphasis> 45 minutter å bygge denne eksempelpakken.
  Heldigvis er de fleste byggetidene kortere enn en SBU.</para>

  <para>Generelt er ikke SBU helt nøyaktige fordi de er avhengige av mange
  faktorer, inkludert vertssystemets versjon av GCC. De er gitt her
  for å gi et estimat på hvor lang tid det kan ta å installere en pakke, men
  tall kan variere med så mye som dusinvis av minutter i noen tilfeller.</para>

  <para>Før du måler byggetiden for en pakke (uansett Binutils
  pass 1 eller en pakke som SBU blir målt av), sørg for at a
  systemstrømprofil egnet for å få systemet til å kjøre med
  maksimal ytelse (og maksimalt strømforbruk) er valgt. Ellers vil
  den målte SBU verdien kan være svært unøyaktig fordi systemet kan
  operere annerledes enn å bygge Binutils pass 1 og den andre pakken.
  Vær oppmerksom på at en betydelig unøyaktighet fortsatt kan dukke opp selv om den er den samme
  profil (bortsett fra en som maksimerer ytelsen) brukes for begge pakkene:
  systemet kan reagere tregere for å <quote>sparer strømmen</quote> bygge
  Binutils pass 1, fordi systembelastningen ser ut til å være bare omtrent 25% av belastningen
  bygge den andre pakken (med <parameter>-j4</parameter>).</para>

  <para>På de fleste distroer kan strømprofilen administreres med enten
  <command>power-profiles-daemon</command> eller <command>tuned</command>.
  Hvis distroen kjører <command>power-profiles-daemon</command>, utsted
  <command>powerprofilesctl set performance</command> kommandoen for å velge
  <literal>performance</literal> profilen.  Hvis distroen kjører
  <command>tuned</command>, utsted <command>tuned-adm profile
  throughput-performance</command> kommandoen for å velge
  <literal>throughput-performance</literal> profilen.</para>

  <para>Selv om du ikke måler SBU verdiene, er det fortsatt bedre å
  velge strømprofilen for maksimal ytelse før du bygger LFS, siden
  å gjøre det kan (åpenbart) gjøre systemet raskere å bygge LFS
  pakker.</para>

  <note>
    <para>Når flere prosessorer brukes på denne måten, vil SBU enhetene i
    boken variere enda mer enn de normalt ville gjort. I noen tilfeller, make
    trinnet vil rett og slett mislykkes. Å analysere resultatet av byggeprosessen vil også
    være vanskeligere fordi linjene i forskjellige prosesser vil være
    sammenflettet. Hvis du får et problem med et byggetrinn, gå tilbake til et
    enkelt prosessorbygg for å analysere feilmeldingene på riktig måte.</para>

    <para>Tidene som presenteres her er basert på bruk av fire kjerner (-j4).
    Tidene i kapittel 8 inkluderer også tiden det skal kjøres regresjonstestene for
    pakken med mindre annet er spesifisert.</para>
  </note>

</sect1>

