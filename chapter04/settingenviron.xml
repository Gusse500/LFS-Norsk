<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
  "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
  <!ENTITY % general-entities SYSTEM "../general.ent">
  %general-entities;
]>

<sect1 id="ch-preps-settingenviron">
  <?dbhtml filename="settingenvironment.html"?>

  <title>Sette opp miljøet</title>

  <para>Sett opp et godt arbeidsmiljø ved å lage to nye oppstartsfiler
  for <command>bash</command> skallet. Mens du er logget inn som bruker
  <systemitem class="username">lfs</systemitem>, utsted følgende kommando
  å lage en ny <filename>.bash_profile</filename>:</para>

<screen><userinput>cat &gt; ~/.bash_profile &lt;&lt; "EOF"
<literal>exec env -i HOME=$HOME TERM=$TERM PS1='\u:\w\$ ' /bin/bash</literal>
EOF</userinput></screen>

  <para>Når du er logget på som bruker <systemitem class="username">lfs</systemitem>,
  det første skallet er vanligvis et <emphasis>login</emphasis> skall som leser
  filen <filename>/etc/profile</filename> fra verten (som sannsynligvis inneholder noen
  innstillinger og miljøvariabler) og deretter <filename>.bash_profile</filename>.
  <command>exec env -i.../bin/bash</command> kommandoen i
  <filename>.bash_profile</filename> filen erstatter det kjørende skallet med et nytt
  med et helt tomt miljø, bortsett fra <envar>HOME</envar>,
  <envar>TERM</envar>, og <envar>PS1</envar> variabler. Dette sikrer at ingen
  uønskede og potensielt farlige miljøvariabler fra vertssystemet
  lekker inn i byggemiljøet. Teknikken som brukes her oppnår målet om å
  sikre et rent miljø.</para>

  <para>Den nye instansen av skallet er et <emphasis>non-login</emphasis>
  skall, som ikke leser, og utfører, innholdet i <filename>/etc/profile</filename> eller
  <filename>.bash_profile</filename> filer, men heller leser og kjører
  <filename>.bashrc</filename> filen istedet. Opprett
  <filename>.bashrc</filename> filen nå:</para>

<screen><userinput>cat &gt; ~/.bashrc &lt;&lt; "EOF"
<literal>set +h
umask 022
LFS=/mnt/lfs
LC_ALL=POSIX
LFS_TGT=$(uname -m)-lfs-linux-gnu
PATH=/usr/bin
if [ ! -L /bin ]; then PATH=/bin:$PATH; fi
PATH=$LFS/tools/bin:$PATH
CONFIG_SITE=$LFS/usr/share/config.site
export LFS LC_ALL LFS_TGT PATH CONFIG_SITE</literal>
EOF</userinput></screen>

  <variablelist>
    <title>Betydningen av innstillingene i <filename>.bashrc</filename></title>

    <varlistentry>
      <term><parameter>set +h</parameter></term>
      <listitem>
  <para><command>set +h</command> kommandoen slår av
  <command>bash</command>'s hashfunksjon. Hashing er vanligvis en nyttig
  funksjon&mdash;<command>bash</command> bruker en hashtabell for å huske
  banen til kjørbare filer for å unngå å søke i <envar>PATH</envar>
  gang på gang for å finne den samme kjørbare filen. Imidlertid bør de nye verktøyene
  brukes så snart de er installert. Ved å slå av hashfunksjonen,
  vil skallet alltid søke <envar>PATH</envar> når et program
  kjøres. Som sådan vil skallet finne de nylig kompilerte verktøyene i
  <filename class="directory">$LFS/tools/bin</filename> så snart de er det
  tilgjengelig uten å huske en tidligere versjon av det samme programmet
  levert av vertsdistroen, i
  <filename class='directory'>/usr/bin</filename> eller
  <filename class='directory'>/bin</filename>.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter>umask 022</parameter></term>
      <listitem>
  <para>Å sette brukerfilopprettingsmasken (umask) til 022 sikrer at nye
  opprettede filer og mapper bare kan skrives av eieren, men er
  lesbar og kjørbar av alle (forutsatt at standardmoduser brukes av
  <function>open(2)</function> systemkall, vil nye filer ende opp med tillatelse
  modus 644 og mapper med modus 755).</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter>LFS=/mnt/lfs</parameter></term>
      <listitem>
  <para><envar>LFS</envar> variabelen skal settes til det valgte monteringens
  punkt.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter>LC_ALL=POSIX</parameter></term>
      <listitem>
  <para><envar>LC_ALL</envar> variabel styrer lokaliseringen av visse
  programmer, slik at meldingene deres følger konvensjonene i et spesifisert land.
  Innstillingen <envar>LC_ALL</envar> til <quote>POSIX</quote> eller <quote>C</quote>
  (de to er likeverdige) sikrer at alt fungerer som forventet i
  chroot miljøet.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter>LFS_TGT=(uname -m)-lfs-linux-gnu</parameter></term>
      <listitem>
  <para><envar>LFS_TGT</envar> variabel setter en ikkestandard, men kompatibel maskin
  beskrivelse for bruk når du bygger vår krysskompiler og linker og når du krysskompiler
  vår midlertidige verktøykjede. Mer informasjon finnes i
  <xref linkend="ch-tools-toolchaintechnotes" role=""/>.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter>PATH=/usr/bin</parameter></term>
      <listitem>
  <para>Mange moderne Linux distribusjoner har slått sammen <filename
  class="directory">/bin</filename> og <filename
  class="directory">/usr/bin</filename>. Når dette er tilfelle, standard
  <envar>PATH</envar> variabel må settes bare til <filename
  class="directory">/usr/bin/</filename> for <xref
  linkend="chapter-temporary-tools"/> miljøet. Når dette ikke er
  tilfelle, legger følgende linje til <filename class="directory">/bin</filename>
  til stien.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter>if [ ! -L /bin ]; then PATH=/bin:$PATH; fi</parameter></term>
      <listitem>
  <para>Hvis <filename class="directory">/bin</filename> er ikke et symbolsk
  lenke, så må den legges til <envar>PATH</envar> variabelen.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter>PATH=$LFS/tools/bin:$PATH</parameter></term>
      <listitem>
  <para>Ved å putte <filename class="directory">$LFS/tools/bin</filename> foran
  standard <envar>PATH</envar>, krysskompilatoren installert i begynnelsen
  av <xref linkend="chapter-cross-tools"/> blir plukket opp av skallet
  umiddelbart etter installasjonen. Dette, kombinert med å slå av hashing,
  begrenser risikoen for at kompilatoren fra verten brukes i stedet for
  krysskompilator.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter>CONFIG_SITE=$LFS/usr/share/config.site</parameter></term>
      <listitem>
  <para>I <xref linkend="chapter-cross-tools"/> og
  <xref linkend="chapter-temporary-tools"/>, hvis denne variabelen ikke er satt,
  <command>configure</command> skriptet
  kan forsøke å laste inn konfigurasjonselementer som er spesifikke for enkelte distribusjoner fra
  <filename>/usr/share/config.site</filename> på vertssystemet. Overstyr
  det for å forhindre potensiell forurensning fra verten.</para>
      </listitem>
    </varlistentry>

    <varlistentry>
      <term><parameter>export ...</parameter></term>
      <listitem>
        <para>Mens kommandoene ovenfor har satt noen variabler, i rekkefølge
        for å gjøre dem synlige innenfor eventuelle underskall, eksporterer vi dem.</para>
      </listitem>
    </varlistentry>

  </variablelist>

  <important>

     <para>Flere kommersielle distribusjoner legger til en ikke dokumentert instansiering
     of <filename>/etc/bash.bashrc</filename> til initialisering av
     <command>bash</command>. Denne filen har potensial til å endre
     <systemitem class="username">lfs</systemitem>
     brukerens miljø på måter som kan påvirke byggingen av kritiske LFS
     pakker. For å sikre at <systemitem class="username">lfs</systemitem>
     brukerens miljø er rent, sjekk for
     nærvær av <filename>/etc/bash.bashrc</filename> og flytt den ut av veienh
     vis den er tilstede. Som <systemitem class="username">root</systemitem>
     bruker, kjør:</para>

     <screen role="nodump"><userinput>[ ! -e /etc/bash.bashrc ] || mv -v /etc/bash.bashrc /etc/bash.bashrc.NOUSE</userinput></screen>

     <para>Etter at bruken av <systemitem class="username">lfs</systemitem>
     brukeren er ferdig i begynnelsen av <xref
     linkend="chapter-chroot-temporary-tools"/>, du kan gjenopprette
     <filename>/etc/bash.bashrc</filename> (hvis ønsket).</para>

     <para>Legg merke til at LFS Bash pakken vi vil bygge i
     <xref linkend="ch-system-bash"/> ikke er konfigurert til å laste eller kjøre
     <filename>/etc/bash.bashrc</filename>, så denne filen er ubrukelig på et
     fullført LFS system.</para>
  </important>

  <para>Til slutt, å ha miljøet fullt forberedt for å bygge
  midlertidige verktøy, hente den nettopp opprettede brukerprofilen:</para>

<screen><userinput>source ~/.bash_profile</userinput></screen>

</sect1>
